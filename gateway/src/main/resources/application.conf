akka {
  log-config-on-start = off
  event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  loglevel = "INFO"
  // stdout-loglevel = "OFF"
  log-dead-letters = off

  actor {
    provider = "cluster"

    serializers {
      java = "akka.serialization.JavaSerializer"
      proto = "akka.remote.serialization.ProtobufSerializer"
    }

    serialization-bindings {
      "com.google.protobuf.GeneratedMessageV3" = proto
      "scalapb.GeneratedMessage" = proto
    }

    allow-java-serialization = off
    enable-additional-serialization-bindings = true
  }
  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
    }
  }

  cluster {
    singleton {
      singleton-name = "singleton"
      role = ""
      hand-over-retry-interval = 1s
      min-number-of-hand-over-retries = 10
    }

    routees = ["ethereum_access_actor"]
  }
}

jsonrpc {
  http {
    port = 9278
    path = "rpc"
  }
  socketio {
    port = 9277
    pool = 10
    path = "/rpc"
  }
}


slick-mysql {
  profile = "slick.jdbc.MySQLProfile$"
  db {
    dataSourceClass = "slick.jdbc.DriverDataSource"
    properties = {
      driver = "com.mysql.jdbc.Driver"
      url = "jdbc:mysql://localhost:3306/workplace?useSSL=false"
      user = "root"
      password = "123456"
    }
  }
}