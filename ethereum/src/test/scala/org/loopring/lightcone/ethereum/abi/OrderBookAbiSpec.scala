/*
 * Copyright 2018 Loopring Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.loopring.lightcone.ethereum.abi

import org.scalatest._
import org.web3j.utils.Numeric

class OrderBookAbiSpec extends FlatSpec with Matchers with BeforeAndAfterAll {

  val orderBookAbi = OrderBookAbi()

  override def beforeAll() {
    info(s">>>>>> To run this spec, use `testOnly *${getClass.getSimpleName}`")
  }

  "encodeOrderSubmittedFunction" should "encode class Params of OrderSubmittedFunction function to  input " in {
    val orderHash =
      "0x3d873915e69114ff5029feedb89d79c7704fa4d0bbbec39b9f4f41de9a320857"
    val params =
      OrderSubmittedFunction.Parms(Numeric.hexStringToByteArray(orderHash))
    val input = orderBookAbi.orderSubmitted.pack(params)
    info(input)
    input should be(
      "0x4778a5be3d873915e69114ff5029feedb89d79c7704fa4d0bbbec39b9f4f41de9a320857"
    )
  }

  "decodeOrderSubmittedFunctionResult" should "decode eth_call return data to  OrderSubmittedFunction function result" in {
    val resp =
      "0x0000000000000000000000000000000000000000000000000000000000000001"
    val result = orderBookAbi.orderSubmitted.unpackResult(resp)
    info(result.toString)
    result match {
      case None ⇒
      case Some(r) ⇒ r.submitted should be(true)
    }
  }

  "decodeOrderSubmittedEvent" should "decode event data and assemble to class OrderSubmittedEvent " in {
    val topics = Seq(
      "0x59f858504f8d8ad967dd7453df850e265270474e364b7e2fbd3333e06efdbfc0"
    )
    val data =
      "0x3d873915e69114ff5029feedb89d79c7704fa4d0bbbec39b9f4f41de9a320857000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000707a7855d9d4d17ec81d4bf6ecfdfcd0738397a8000000000000000000000000dd89eec641592ec1794af795d27f780359dd7b120000000000000000000000005ea5dfdb0a5b0df087af7184f4e7fb6f85eefe8e00000000000000000000000000000000000000000000021e19e0c9bab240000000000000000000000000000000000000000000000000000029a2241af62c0000000000000000000000000000000000000000000000000000000000005c0f942b000000000000000000000000a28ba01507124255e6b3c39e77cf92f72ff4cb87000000000000000000000000000000000000000000000000000000000000000000000000000000000000000046217f652b8fe51c5f28d3b17acad87b27dc208e000000000000000000000000000000000000000000000000000000005c1516530000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f65487d6c375f79416f16bfead5f2a1fede6676a00000000000000000000000000000000000000000000000014d1120d7b160000000000000000000000000000000000000000000000000000000000000000001e00000000000000000000000000000000000000000000000000000000000000280000000000000000000000004d00f4d44bca39253c0e443a0df6d2d2d2643b80000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    val result = orderBookAbi.orderSubmittedEvent.unpack(data, topics.toArray)
    result match {
      case None ⇒
      case Some(order) ⇒
        order.orderHash should be(
          "0x3d873915e69114ff5029feedb89d79c7704fa4d0bbbec39b9f4f41de9a320857"
        )
        order.orderData should be(
          "0x000000000000000000000000707a7855d9d4d17ec81d4bf6ecfdfcd0738397a8000000000000000000000000dd89eec641592ec1794af795d27f780359dd7b120000000000000000000000005ea5dfdb0a5b0df087af7184f4e7fb6f85eefe8e00000000000000000000000000000000000000000000021e19e0c9bab240000000000000000000000000000000000000000000000000000029a2241af62c0000000000000000000000000000000000000000000000000000000000005c0f942b000000000000000000000000a28ba01507124255e6b3c39e77cf92f72ff4cb87000000000000000000000000000000000000000000000000000000000000000000000000000000000000000046217f652b8fe51c5f28d3b17acad87b27dc208e000000000000000000000000000000000000000000000000000000005c1516530000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f65487d6c375f79416f16bfead5f2a1fede6676a00000000000000000000000000000000000000000000000014d1120d7b160000000000000000000000000000000000000000000000000000000000000000001e00000000000000000000000000000000000000000000000000000000000000280000000000000000000000004d00f4d44bca39253c0e443a0df6d2d2d2643b80000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
        )
    }
  }

}
