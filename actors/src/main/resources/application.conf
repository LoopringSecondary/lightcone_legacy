include "docker"
include "etehreum"
include "mysql"
include "redis"
include "socketio"
include "third_party_datasource"
include "actors"

akka {
  log-config-on-start = off
  event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  loglevel = "DEBUG"
  logger-startup-timeout = 30s
  log-dead-letters = off
  # stdout-loglevel = "OFF"



  actor {
    provider = "akka.cluster.ClusterActorRefProvider"

    serializers {
      proto = "akka.remote.serialization.ProtobufSerializer"
    }

    serialization-bindings {
      "com.google.protobuf.GeneratedMessageV3" = proto
      "scalapb.GeneratedMessage" = proto
    }

    allow-java-serialization = off
    enable-additional-serialization-bindings = true
  }

  remote {
    log-remote-lifecycle-events = off
    artery {
      enabled = on
      transport = aeron-udp
      canonical.hostname = ${clustering.hostname}
      canonical.port = ${clustering.port}
    }

    bind {
      hostname = "0.0.0.0"
      port = 0
    }
  }

  cluster {
    seed-nodes = [
      "akka://"${clustering.cluster-name}"@"${clustering.seed-hostname}":"${clustering.seed-port}]

    # auto downing is NOT safe for production deployments.
    # you may want to use it during development, read more about it in the docs.
    # auto-down-unreachable-after = 10s

    roles = ${clustering.node-roles}
  }
}

akka.cluster.jmx.multi-mbeans-in-same-jvm = on

# Enable metrics extension in akka-cluster-metrics.
akka.extensions=[
  "akka.cluster.metrics.ClusterMetricsExtension",
  "akka.cluster.pubsub.DistributedPubSub"
]

ring-dispatcher {
  type = Dispatcher
  executor = "fork-join-executor"

  # Configuration for the fork join pool
  fork-join-executor {
    # Min number of threads to cap factor-based parallelism number to
    parallelism-min = 1
    # Parallelism (threads) ... ceil(available processors * factor)
    parallelism-factor = 2.0
    # Max number of threads to cap factor-based parallelism number to
    parallelism-max = 2
  }
  # Throughput defines the maximum number of messages to be
  # processed per actor before the thread jumps to the next actor.
  # Set to 1 for as fair as possible.
  throughput = 10
}


behaviors {
  future-wait-timeout = 2 # second
}

