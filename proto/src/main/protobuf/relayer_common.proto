/*
 * Copyright 2018 Loopring Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

option java_multiple_files = true;
package io.lightcone.relayer.data;

import "core.proto";
import "persistence.proto";

message OrderState {
    io.lightcone.core.Amount amount_s          = 1;
    io.lightcone.core.Amount amount_b          = 2;
    io.lightcone.core.Amount amount_fee        = 3;
}

message Order {
    string id                                           = 1;
    string token_s                                      = 2;
    string token_b                                      = 3;
    string token_fee                                    = 4;
    io.lightcone.core.Amount amount_s                   = 5;
    io.lightcone.core.Amount amount_b                   = 6;
    io.lightcone.core.Amount amount_fee                 = 7;
    int64 valid_since                                   = 8;
    int64 submitted_at                                  = 9;
    int32 num_attempts                                  = 10;
    int64 block                                         = 11;
    io.lightcone.core.OrderStatus status                = 12;
    double wallet_split_percentage                      = 13;
    OrderState outstanding                              = 14;
    OrderState reserved                                 = 15;
    OrderState actual                                   = 16;
    OrderState matchable                                = 17;
}

message ExpectedOrderFill {
    Order order                                         = 1;
    OrderState pending                                  = 2;
    io.lightcone.core.Amount amount_margin              = 3;
}

message OrderRing {
    ExpectedOrderFill maker                             = 1;
    ExpectedOrderFill taker                             = 2;
}

message EthereumProxySettings {
    message Node {
        string host                 = 1;
        int32  port                 = 2;
        int32  ws_port              = 3;
        string ipc_path             = 4;
    }
    int32 pool_size                 = 1;
    int32 check_interval_seconds    = 2;
    float healthy_threshold         = 3;
    repeated Node nodes             = 4;
}



message SettlementTx {
    enum Status {
        PENDING  = 0;
        BLOCK    = 1;
        FAILED   = 2;
    }
    string  tx_hash    = 1;
    string  from       = 2;
    string  to         = 3;
    string  gas        = 4;
    string  gasPrice   = 5;
    string  value      = 6;
    string  data       = 7;
    int64   nonce      = 8;
    Status  status     = 9;
    int64   create_at  = 10;
    int64   updated_at = 11;
}

message NodeBlockHeight{
    string node_name = 1;
    int64  height    = 2;
}

message MissingBlocksRecord {
    int64 block_start           = 1;
    int64 block_end             = 2;
    int64 last_handled_block    = 3;
    int64 sequence_id           = 4;
}

// Used as statistical data, such as a histogram


message OHLCData {
    repeated  double  data      = 1;
    /*int64    starting_point   = 2;
    double     quality          = 3;
    double     amount           = 4;
    double     opening_price    = 5;
    double     closing_price    = 6;
    double     highest_price    = 7;
    double     lowest_price     = 8;*/
}

message AccountBalance {
    message TokenBalance {
        string token                                    = 1;
        io.lightcone.core.Amount balance                = 2;
        io.lightcone.core.Amount allowance              = 3;
        io.lightcone.core.Amount available_balance      = 4;
        io.lightcone.core.Amount available_alloawnce    = 5;
        int64 block                                     = 6;
    }

    string address                                  = 1;
    map<string, TokenBalance> token_balance_map     = 2;
    int32  nonce                                    = 3;
}


message GeneralNotification {
    enum Level {
        INFO            = 0;
        WARNING         = 1;
        URGENT          = 3;
    }

    Level level = 1;
    string content = 2;
}
