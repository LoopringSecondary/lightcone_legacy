/*
 * Copyright 2018 Loopring Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

option java_multiple_files = true;
package io.lightcone.ethereum.event;

import "core.proto";
import "ethereum.proto";

/////////////////////////////////////////////////////////////////////
// ETHEREUM EVENT
/////////////////////////////////////////////////////////////////////

message EventHeader {
    string tx_hash = 1;
    io.lightcone.ethereum.TxStatus tx_status = 2;
    BlockHeader block_header = 3;
    string tx_from = 6;
    string tx_to = 7;
    io.lightcone.core.Amount tx_value = 8;
}

//TODO:TransferEvent和ApprovalEvent不会作为消息进行传递，但是在作为中间计算存在，考虑如何处理
message TransferEvent {
    EventHeader header = 1;
    string owner = 2;
    string from = 3;
    string to = 4;
    string token = 5;
    io.lightcone.core.Amount amount = 6;
}

message ApprovalEvent {
    EventHeader header = 1;
    string owner    = 2;
    string spender  = 3;
    string token    = 4;
    bytes amount    = 5;
    int64 block     = 6;
}

//TODO(hongyu):以下三个Event类似，考虑合并处理
message AddressBalanceUpdatedEvent {
    string address  = 1;
    string token    = 2;
    io.lightcone.core.Amount balance   = 3;
    int64 block = 4;
}

message AddressAllowanceUpdatedEvent {
    string address  = 1;
    string token    = 2;
    io.lightcone.core.Amount allowance = 3;
    int64 block = 4;
}

message AddressBalanceAllowanceUpdatedEvent {
    string address  = 1;
    string token    = 2;
    io.lightcone.core.Amount balance   = 3;
    io.lightcone.core.Amount allowance = 4;
    int64 block = 5;
}

message GasPriceUpdatedEvent {
    int64 gas_price = 1;
}

message BlockGasPricesExtractedEvent {
    int64 height = 1;
    repeated int64 gas_prices = 2;
}

message OrderSubmittedOnChainEvent {
    io.lightcone.core.RawOrder raw_order = 1;
}

message TokenBurnRateChangedEvent {
    EventHeader header                      = 1;
    string token                            = 2;
    io.lightcone.core.BurnRate burn_rate    = 3;
}

//LOOPRING RINGMINED
message OrderFilledEvent {
    EventHeader header  = 1;
    string owner        = 2;
    string order_hash   = 3;
}

message RingMinedEvent {   //include InvalidRing and RingMined and failed tx
    EventHeader header                          = 1;
    repeated string order_ids                   = 3;
    io.lightcone.core.MarketPair market_pair    = 4;
}

//LOOPRING Cutoff
message CutoffEvent {
    EventHeader header  = 1;
    string broker       = 2;
    string owner        = 3;
    string market_hash  = 4;
    int64  cutoff       = 5; // in seconds.
}

message OrdersCancelledOnChainEvent {
    EventHeader header              = 1;
    string owner                    = 2;
    string broker                   = 3;
    repeated string order_hashes    = 4;
}

message ForkEvent {
    int64 block  = 1;
}
