/*
 * Copyright 2018 Loopring Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

option java_multiple_files = true;
package io.lightcone.persistence;

import "core.proto";

enum SortingType {
    ASC  = 0;
    DESC = 1;
}

message Paging {
    int64 skip = 1; // 忽略的记录
    int32 size = 2; // 拉取的记录数
}

message CursorPaging {
    int64 cursor = 1; // where seqenceId > from limit 0, take
    int32 size = 2;
}

message News {

}

message TokenTickerRecord {
    enum Type {
        TOKEN     = 0; // lrc, zrx, eth, btc
        CURRENCY  = 1; // cny
    }
    string token_address        = 1;
    string symbol               = 2;
    double price                = 3;  //默认存储的为usd价格
    double volume_24h           = 4;
    double percent_change_1h    = 5;
    double percent_change_24h   = 6;
    double percent_change_7d    = 7;
    double market_cap           = 8;
    int64 timestamp             = 9;
    bool  is_valid              = 10;
    Type  type                  = 11;
    string data_source          = 12;
}

message CMCCrawlerConfigForToken {
    string symbol = 1;
    string slug = 2;
}

message SettlementTx {
    enum Status {
        PENDING  = 0;
        BLOCK    = 1;
        FAILED   = 2;
    }
    string  tx_hash      = 1;
    string  from         = 2;
    string  to           = 3;
    int64   block_number = 4;
    string  gas          = 5;
    string  gasPrice     = 6;
    string  value        = 7;
    string  data         = 8;
    int64   nonce        = 9;
    Status  status       = 10;
    int64   create_at    = 11;
    int64   updated_at   = 12;
}

message MissingBlocksRecord {
    int64 block_start           = 1;
    int64 block_end             = 2;
    int64 last_handled_block    = 3;
    int64 sequence_id           = 4;
}