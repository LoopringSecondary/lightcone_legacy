/*
 * Copyright 2018 Loopring Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

option java_multiple_files = true;
package org.loopring.lightcone.proto;

import "ethereum.proto";
import "core.proto";

/////////////////////////////////////////////////////////////////////
// ETHEREUM JSON-RPC MESSAGES
/////////////////////////////////////////////////////////////////////

message JsonRpc {
    message Request {
        string json = 1;
    }

    message RequestWithHeight{
        Request req = 1;
        uint32 height = 2;
    }

    message Error {
        int32 code = 1;
        string message = 2;
    }

    message Response {
        string json = 1;
    }
}

message EthRpcError {
    int32 code = 1;
    string error = 2;
}

message GetBlockNumber {
    message Req {
    }

    message Res {
        int32 id = 1;
        string jsonrpc = 2;
        string result = 3;
        EthRpcError error = 4;
    }
}

message EthCall {
    message Req {
        int32 id = 1;
        TransactionParams param = 2;
        string tag = 3;
    }

    message Res {
        int32 id = 1;
        string jsonrpc = 2;
        string result = 3;
        EthRpcError error = 4;
    }
}

// eth_getBalance
message EthGetBalance {
    message Req {
        string address = 1;
        string tag = 2;
    }
    message Res {
        int32 id = 1;
        string jsonrpc = 2;
        string result = 3;
        EthRpcError error = 4;
    }
}

// eth_getTransactionByHash
message GetTransactionByHash {
    message Req {
        string hash = 1;
    }
    message Res {
        int32 id = 1;
        string jsonrpc = 2;
        Transaction result = 3;
        EthRpcError error = 4;
    }
}

// eth_getTransactionReceipt
message GetTransactionReceipt {
    message Req {
        string hash = 1;
    }
    message Res {
        int32 id = 1;
        string jsonrpc = 2;
        TransactionReceipt result = 3;
        EthRpcError error = 4;
    }
}

// eth_getBlockByNumber
message GetBlockWithTxHashByNumber {
    message Req {
        string blockNumber = 1;
    }
    message Res {
        int32 id = 1;
        string jsonrpc = 2;
        BlockWithTxHash result = 3;
        EthRpcError error = 4;
    }
}

message GetBlockWithTxObjectByNumber {
    message Req {
        string blockNumber = 1;
    }
    message Res {
        int32 id = 1;
        string jsonrpc = 2;
        BlockWithTxObject result = 3;
        EthRpcError error = 4;
    }
}

// eth_getBlockByHash
message GetBlockWithTxHashByHash {
    message Req {
        string blockHash = 1;
    }
    message Res {
        int32 id = 1;
        string jsonrpc = 2;
        BlockWithTxHash result = 3;
        EthRpcError error = 4;
    }
}

message GetBlockWithTxObjectByHash {
    message Req {
        string blockHash = 1;
    }
    message Res {
        int32 id = 1;
        string jsonrpc = 2;
        BlockWithTxObject result = 3;
        EthRpcError error = 4;
    }
}

// debug_traceTransaction
message TraceTransaction {
    message Req {
        string txhash = 1;
    }
    message Res {
        int32 id = 1;
        string jsonrpc = 2;
        TransactionTracing result = 3;
        EthRpcError error = 4;
    }
}

// eth_estimateGas
message GetEstimatedGas {
    message Req {
        string to = 1;
        string data = 2;
    }
    message Res {
        int32 id = 1;
        string jsonrpc = 2;
        string result = 3;
        EthRpcError error = 4;
    }
}

message GetNonce {
    message Req {
        string owner = 1;
        string tag = 2;
    }
    message Res {
        int32 id = 1;
        string jsonrpc = 2;
        string result = 3;
        EthRpcError error = 4;
    }
}

message GetBlockTransactionCount {
    message Req {
        string block_hash = 1;
    }
    message Res {
        int32 id = 1;
        string jsonrpc = 2;
        string result = 3;
        EthRpcError error = 4;
    }
}

message BatchCallContracts {
    message Req {
        repeated EthCall.Req reqs = 1;
    }

    message Res {
        repeated EthCall.Res resps = 1;
    }
}

message BatchGetTransactions {
    message Req {
        repeated GetTransactionByHash.Req reqs = 1;
    }

    message Res {
        repeated GetTransactionByHash.Res resps = 1;
    }
}

message BatchGetTransactionReceipts {
    message Req {
        repeated GetTransactionReceipt.Req reqs = 1;
    }

message XSendRawTransactionRes {
    int32 id = 1;
    string jsonrpc = 2;
    string result = 3;
    XEthResError error = 4;
}
message XGetUncleByBlockNumAndIndexReq{
    string blockNum = 1;
    string index = 2;
}

message XBatchGetUncleByBlockNumAndIndexReq{
   repeated XGetUncleByBlockNumAndIndexReq reqs = 1;
    message Res {
        repeated GetTransactionReceipt.Res resps = 1;
    }
}

message GetUncle {
    message Req {
        string blockNum = 1;
        string index = 2;
    }
    message Res {}
}

message BatchGetUncle {
    message Req{
       repeated GetUncle.Req reqs = 1;
    }

    message Res{
       repeated GetBlockWithTxHashByHash.Res resps = 1;
    }
}

// message SendRawTransactionReq {
//     string data = 1;
// }

/// 合约ITradeHistory中的数据结构，可以通过查询合约，或者
/// 解析合约事件得到下面的数据：

// message RingExecuted {
//     OrderRing ring = 1;
//     string tx_hash = 2;
//     ExecutionStatus status = 3;
//     bytes used_gas = 4;
//     int64 block_number = 5;
// }



