/*
 * Copyright 2018 Loopring Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

option java_multiple_files = true;
package io.lightcone.relayer.socketio;

import "core.proto";
import "relayer_common.proto";

message BalanceUpdate {
    string address                      = 1;
    string token                        = 2;
    bytes  balance_bytes                = 3;
    bytes  allowance_bytes              = 4;
    bytes  available_balance_bytes      = 5;
    bytes  available_alloawnce_bytes    = 6;
    int32  nonce                        = 7;

    string balance                      = 10;
    string allowance                    = 11;
    string available_balance            = 12;
    string available_alloawnce          = 13;
}

message OrderUpdate {
    string order_id                                 = 1;
    string owner                                    = 2;
    io.lightcone.core.MarketPair   market_pair      = 3;
    io.lightcone.core.OrderStatus  status           = 4;
    io.lightcone.relayer.data.OrderState state      = 5;
}

message TxRecordUpdate{
    string tx_hash = 1;
    string status = 2;
    string gasUsed = 3;
    string block_num = 4;
    string time = 5;
    string owner = 6;
    string tx_type = 7;
}

message News {

}

////////////////////////////////////////////////////////////////////////////////////////////////////
// socketio subscription

message SocketIOSubscription {
    message Ack { // we only need to return a general message
        io.lightcone.core.ErrorCode error   = 1;
        string message                      = 2;
    }

    // subscribe for message TxRecord defined in persistence.proto
    message ParamsForTxRecord {
        repeated string addresses = 1;
        repeated string tx_types = 2;
    }

    // subscribe for message Orderbook.Update defined in core.proto
    message ParamsForOrderbookUpdate {
        int32 level = 1;
        io.lightcone.core.MarketPair market = 2;
    }

    // subscribe for message TokenMetadata defined in core.proto
    message ParamsForTokenMetadata {
        repeated string tokens = 1;
    }

    // subscribe for message MarketMetadata defined in core.proto
    message ParamsForMarketMetadata {
        repeated io.lightcone.core.MarketPair markets = 1;
    }

    // subscribe for message Ticker defined in persistence.proto
    message ParamsForTicker {
        io.lightcone.core.MarketPair market = 1;
    }

    // subscribe for message BalanceUpdate
    message ParamsForBalanceUpdate {
        repeated string addresses  = 1;
        repeated string tokens = 2;
    }

    // subscribe for message OrderUpdate
    message ParamsForOrderUpdate {
        repeated string addresses  = 1;
        io.lightcone.core.MarketPair market = 2;
    }

    // subscribe for message News
    message ParamsForNews {
    }

    ParamsForTxRecord           params_for_tx_record            = 1;
    ParamsForOrderbookUpdate    params_for_orderbook_update     = 2;
    ParamsForTokenMetadata      params_for_token_metadata       = 3;
    ParamsForMarketMetadata     params_for_market_metadata      = 4;
    ParamsForBalanceUpdate      params_for_balance_update       = 5;
    ParamsForTicker             params_for_ticker               = 6;
    ParamsForOrderUpdate        params_for_order_update         = 7;
    ParamsForNews               params_for_news                 = 8;
}
