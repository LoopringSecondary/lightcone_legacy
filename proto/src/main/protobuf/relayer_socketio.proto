/*
 * Copyright 2018 Loopring Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

option java_multiple_files = true;
package io.lightcone.relayer.data.ext;

import "core.proto";
import "relayer_common.proto";


////////////////////////////////////////////////////////////////////////////////////////////////////
// socketio subscription

message SocketIOSubscription {
    message Ack { // we only need to return a general message
        io.lightcone.core.ErrorCode error   = 1;
        string message                      = 2;
    }

    // subscribe for message Activity defined in persistence.proto
    message ParamsForActivities {
        repeated string addresses = 1;
        repeated string activity_types = 2;
    }

    // subscribe for message Orderbook.Update defined in core.proto
    message ParamsForOrderbook {
        int32 level = 1;
        io.lightcone.core.MarketPair market = 2;
    }

    // subscribe for message TokenMetadata defined in core.proto
    message ParamsForTokens {
        repeated string tokens = 1;
    }

    // subscribe for message MarketMetadata defined in core.proto
    message ParamsForMarkets {
        repeated io.lightcone.core.MarketPair markets = 1;
    }

    // subscribe for message Ticker defined in persistence.proto
    message ParamsForTickers {
        io.lightcone.core.MarketPair market = 1;
    }

    // subscribe for message Account
    message ParamsForAccounts {
        repeated string addresses  = 1;
        repeated string tokens = 2;
    }

    // subscribe for message OrderSnippet
    message ParamsForOrders {
        repeated string addresses  = 1;
    }

    // subscribe for message News defined in persistence.proto
    message ParamsForNews {
    }

    ParamsForActivities             params_for_tx_record            = 1;
    ParamsForOrderbook              params_for_orderbook_update     = 2;
    ParamsForTokens                 params_for_token_metadata       = 3;
    ParamsForMarkets                params_for_market_metadata      = 4;
    ParamsForAccounts               params_for_balance_update       = 5;
    ParamsForTickers                params_for_ticker               = 6;
    ParamsForOrders                 params_for_order_update         = 7;
    ParamsForNews                   params_for_news                 = 8;
}
