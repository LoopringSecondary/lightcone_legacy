syntax = "proto3";

option java_multiple_files = true;
package io.lightcone.relayer.data.ext;

import "core.proto";
import "persistence.proto";


// Usef for JSON RPC
message Account {
    message BalanceAndAllowance{
        string token                = 1;
        string balance              = 2;
        string allowance            = 3;
        string available_balance    = 4;
        string available_allowance  = 5;
    }

    string address  = 1;
    int32  nonce    = 2;
    map<string, BalanceAndAllowance> token_balance_and_allowances_map = 3;
}

message GetAccounts{
    message Params {
        repeated string addresses  = 1;
        repeated string tokens = 2;
    }
    message Result {
       repeated Account accounts = 1;
    }
}

message SubmitOrder{
    message Params {
        io.lightcone.ore.RawOrder.RawOrder order = 1;
    }
    message Result {
        string order_hash = 1;
    }
}

message GetOrders{
    message Params {
        string owner = 1;
        io.lightcone.core.MarketPair market = 2;
        repeated string statuses = 3;
        string sort = 4;
        int32 page_num = 5;
        int32 page_size = 6;
    }

    message Result{
        string owner = 1;
        int32 page_num = 2;
        int32 page_size = 3;
        int32 total = 4;
        // Do not return the full order, only return a small pice of information.
        repeated io.lightcone.ore.RawOrder orders = 5;
    }

}

message GetFills{
    message Params {
        string owner = 1;
        io.lightcone.core.MarketPair market = 2;
        string sort = 3;
        int32 page_num = 4;
        int32 page_size = 5;
    }
    message Result {
        string owner = 1;
        int32 page_num = 2;
        int32 page_size = 3;
        int32 total = 4;
        repeated io.lightcone.persistence.Fill fills = 5;
    }
}

message GetRings {
    message Params {
        string ringHash = 1;
        string ringIndex = 2;
        string sort = 3;
        int32 page_num = 4;
        int32 page_size = 5;
    }

    message Result {
        int32 page_num = 1;
        int32 page_size = 2;
        int32 total  = 3;
        repeated io.lightcone.persistence.Ring rings = 4;
    }
}

message GetAccountActivities {
    message Params {
        string owner = 1;
        string type = 2;  // TODO(yadong): I think we can use Enum type here.
        string sort = 3;  // TODO(yadong): I think we can use Enum type here.
        int32 page_num = 4;
        int32 page_size = 5;
    }

    //TODO定义Transaction的前端结构
    message Result {
        string owner = 1;
        int32 page_num = 2;
        int32 page_size = 3;
        int32 total = 4;
        repeated io.lightcone.persistence.AccountActivity activities = 5;
    }
}

message GetTokens {
    message Params {
    }

    message  Result {
        repeated io.lightcone.core.TokenMetadata tokens  =1;
    }
}

message GetMarkets {
    message Params {
    }

    message Result {
        repeated io.lightcone.core.MarketMetadata markets  =1;
    }
}

//order book 可以使用 relayer_rpc_internal_core 中的GetOrderbook
