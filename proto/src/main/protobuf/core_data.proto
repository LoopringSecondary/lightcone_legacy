/*
 * Copyright 2018 Loopring Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

option java_multiple_files = true;
package org.loopring.lightcone.proto.core;

enum XOrderStatus {
    STATUS_NEW = 0;
    STATUS_PENDING = 1;
    STATUS_EXPIRED = 2;
    STATUS_DUST_ORDER = 3;
    STATUS_PARTIALLY_FILLED = 4;
    STATUS_COMPLETELY_FILLED = 5;
    STATUS_CANCELLED_BY_USER = 6;

    STATUS_CANCELLED_LOW_BALANCE = 100;
    STATUS_CANCELLED_LOW_FEE_BALANCE = 101;
    STATUS_CANCELLED_TOO_MANY_ORDERS = 102;
    STATUS_CANCELLED_TOO_MANY_FAILED_SETTLEMENTS = 103;

    // TODO(dongw): the following should be error code
    STATUS_CANCELLED_DUPLICIATE = 200;
    STATUS_INVALID_DATA = 201;
    STATUS_UNSUPPORTED_MARKET = 202;
}

enum XMatchingFailure {
    MATCHING_ERR_NONE = 0;
    MATCHING_ERR_ORDERS_NOT_TRADABLE = 1;
    MATCHING_ERR_INCOME_TOO_SMALL = 2;
    MATCHING_ERR_MAKER_COMPLETELY_FILLED = 3;
    MATCHING_ERR_TAKER_COMPLETELY_FILLED = 4;
    MATCHING_ERR_INVALID_MAKER_ORDER = 5;
    MATCHING_ERR_INVALID_TAKER_ORDER = 6;
}

enum XOrderValidationError {
    ORDER_VALIDATION_ERR_NONE = 0;
}

enum TokenType {
    ERC20   = 0;
    ERC1400 = 1;
}


message XRawOrder {
  string owner = 1;
  string token_s = 2;
  string token_b = 3;
  bytes amount_s = 4;
  bytes amount_b = 5;
  int64 valid_since = 6;
  bool all_or_none = 7;
  string fee_token = 8;
  bytes fee_amount = 9;
  string sig = 10;
  string dual_auth_sig = 11;
  string hash = 12;
  string valid_until = 13;
  string wallet = 14;
  string dual_auth_address = 15;
  string broker = 16;
  string order_interceptor = 17;
  int32 version = 18;
  int32 wallet_split_percentage = 19;
  int32 token_s_fee_percentage = 20;
  int32 token_b_fee_percentage = 21;
  int32 waive_fee_percentage = 22;
  bytes token_spendable_s = 23;
  bytes token_spendable_fee = 24;
  bytes broker_spendable_s = 25;
  bytes broker_spendable_fee = 26;
}


// use string to represent big0numbers and addresses
message LoopringOrder {
    int32  version      = 1;

    // required fields
    string owner        = 2;
    string token_s      = 3;
    string token_b      = 4;
    string amount_s     = 5;
    string amount_b     = 6;
    int32  valid_since  = 7; // in seconds

    // optional fields
    string dual_auth_addr          = 20;
    string broker                  = 21;
    string order_interceptor       = 22;
    string wallet                  = 23;
    int32  valid_until             = 24; // in seconds
    string sig                     = 25;
    string dual_auth_sig           = 26;
    bool   all_or_none             = 27;
    string fee_token               = 28;
    string fee_amount              = 29;
    int32  waive_fee_percentage    = 30;
    int32  token_s_fee_percentage  = 31;
    int32  token_b_fee_percentage  = 32;
    string token_recipient         = 33;
    int32  wallet_split_percentage = 34;

    // ERC1400 support:
    TokenType token_type_s    = 50;
    TokenType token_type_b    = 51;
    TokenType token_type_fee  = 52;
    string    tranche_s       = 53;
    string    tranche_b       = 54;
    string    transfer_data_s = 55;

    // The following fieds are not part of Loopring's order definition but
    // will be provided as metadata
    int64 created_at = 101;
    int64 updated_at = 102;
    int64 matched_at = 103;
    int64 updated_at_block = 104;
}

message LoopringRing {
    repeated int32 order_indexes = 1;
}

enum SigningAlgorithm {
    ALGO_NONE     = 0;
    ALGO_ETHEREUM = 1;
    ALGO_EIP712   = 2;
}

message LoopringRings {
    string fee_recipient          = 1;
    string miner                  = 2;
    string sig                    = 3;
    repeated LoopringRing rings   = 4;
    repeated LoopringOrder orders = 5;
    SignAlgorithm sign_algorithm  = 6;
    string hash                   = 7;
    string transaction_origin     = 8;
}
